const axios = require('axios');
const pdfParse = require('pdf-parse');
const supabase = require('../config/supabaseClient');

const GEMINI_API_KEY = process.env.GEMINI_API_KEY;
const GEMINI_API_URL = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${GEMINI_API_KEY}`;

const extractCVDataWithGemini = async (fileBuffer) => {
  try {
    const pdfData = await pdfParse(fileBuffer);
    const prompt = `
Analiza este curr√≠culum y extrae las habilidades t√©cnicas, habilidades blandas y certificaciones en formato JSON. Las habilidades tienen que concordar con alguna de las siguientes categor√≠as:
ASP.NET Core - T√©cnica
Blazor WebAssembly - T√©cnica
C# 12 Language Features - T√©cnica
Entity Framework Core - T√©cnica
LINQ Mastery - T√©cnica
SignalR - T√©cnica
WPF / WinUI 3 Desktop Apps - T√©cnica
.NET MAUI (cross-platform UI) - T√©cnica
.NET Microservices With Dapr - T√©cnica
Azure DevOps Pipelines - T√©cnica
Dapper Micro-ORM - T√©cnica
Dependency Injection (built-in container) - T√©cnica
gRPC For .NET - T√©cnica
NuGet Package Management - T√©cnica
Performance Profiling (dotTrace) - T√©cnica
Roslyn Analyzers & Source Generators - T√©cnica
Task-Based Async Programming - T√©cnica
Unity / Prism MVVM Frameworks - T√©cnica
xUnit / NUnit Testing - T√©cnica
MLOps - T√©cnica
Fine-Tuning - T√©cnica
Model Lifecycle - T√©cnica
Responsible AI - T√©cnica
Vector DBs - T√©cnica
AI Code Review - T√©cnica
Prompt Engineering - T√©cnica
Workflow Orchestration - T√©cnica
GraphQL - T√©cnica
OpenAPI - T√©cnica
REST - T√©cnica
Event Streaming Kafka/Pulsar - T√©cnica
gRPC - T√©cnica
Unity - T√©cnica
Unreal - T√©cnica
WebXR - T√©cnica
Shader Programming - T√©cnica
AWS API Gateway - T√©cnica
AWS CDK (Cloud Development Kit) - T√©cnica
AWS CloudFormation - T√©cnica
AWS DynamoDB - T√©cnica
AWS ECS - T√©cnica
AWS EKS - T√©cnica
AWS Elastic Beanstalk - T√©cnica
AWS Fargate - T√©cnica
AWS Glue - T√©cnica
AWS IAM (Identity & Access Management) - T√©cnica
AWS Lambda - T√©cnica
AWS Step Functions - T√©cnica
AWS VPC Design - T√©cnica
Amazon CloudWatch - T√©cnica
Amazon EC2 - T√©cnica
Amazon Kinesis - T√©cnica
Amazon RDS - T√©cnica
Amazon S3 - T√©cnica
Amazon SNS - T√©cnica
Amazon SQS - T√©cnica
Hardhat/Foundry - T√©cnica
Solidity - T√©cnica
Security Audits - T√©cnica
AWS/Azure/GCP - T√©cnica
CI/CD - T√©cnica
Docker - T√©cnica
IaC - T√©cnica
Kubernetes - T√©cnica
Git Mastery - Suave
Agile Practices - Suave
Architectural Writing - Suave
Code Reviews - Suave
Communication - Suave
Algorithms - T√©cnica
Complexity - T√©cnica
Data Structures - T√©cnica
Memory - T√©cnica
Amazon Redshift - T√©cnica
Apache Superset - T√©cnica
Azure Synapse Analytics - T√©cnica
Google BigQuery - T√©cnica
Informatica PowerCenter - T√©cnica
Looker / Looker Studio - T√©cnica
Power BI - T√©cnica
Snowflake - T√©cnica
Tableau - T√©cnica
Talend Open Studio - T√©cnica
Dbt (Core & Cloud) - T√©cnica
Airflow - T√©cnica
ETL/ELT - T√©cnica
SQL + NoSQL Tuning - T√©cnica
Spark/Flink - T√©cnica
Data Lakes - T√©cnica
Ansible - T√©cnica
Argo CD - T√©cnica
GitHub Actions - T√©cnica
GitLab CI/CD - T√©cnica
Helm Charts - T√©cnica
Jenkins - T√©cnica
Packer - T√©cnica
Site Reliability Engineering (SRE) - T√©cnica
Spinnaker - T√©cnica
Terraform Modules & Workspaces - T√©cnica
Angular - T√©cnica
Angular Material - T√©cnica
Next.js - T√©cnica
React 18 - T√©cnica
Redux Toolkit / NgRx - T√©cnica
Tailwind CSS - T√©cnica
TypeScript - T√©cnica
Webpack & Vite - T√©cnica
Apache Kafka (Java Client) - T√©cnica
GraalVM Native Image - T√©cnica
Gradle - T√©cnica
Hibernate / JPA - T√©cnica
JUnit & Mockito Testing - T√©cnica
JVM GC Tuning & Performance - T√©cnica
Jakarta EE - T√©cnica
Java Flight Recorder - T√©cnica
Maven - T√©cnica
MicroProfile - T√©cnica
Micronaut - T√©cnica
Quarkus - T√©cnica
Reactive Streams (Reactor / RxJava) - T√©cnica
Spring Boot - T√©cnica
Spring Framework - T√©cnica
Appian - T√©cnica
Mendix - T√©cnica
Power Platform - T√©cnica
UiPath - T√©cnica
Android Jetpack Compose - T√©cnica
Android Studio - T√©cnica
Combine & Async/Await - T√©cnica
Core Data - T√©cnica
Cross-Platform Kotlin Multiplatform - T√©cnica
Flutter - T√©cnica
Hilt & Room - T√©cnica
Kotlin + Jetpack Compose - T√©cnica
Objective-C Legacy - T√©cnica
React Native - T√©cnica
SwiftUI - T√©cnica
IOS SwiftUI - T√©cnica
C/C++ - T√©cnica
Go - T√©cnica
Java/Kotlin - T√©cnica
Python - T√©cnica
Rust - T√©cnica
Swift - T√©cnica
TypeScript/JS - T√©cnica
OpenTelemetry - T√©cnica
Prometheus - T√©cnica
SLO/SLA - T√©cnica
Incident Command - T√©cnica
Tracing - T√©cnica
Async/Reactive Patterns - T√©cnica
Caching - T√©cnica
Load-Balancing - T√©cnica
Confluence Knowledge Bases - T√©cnica
Jira Administration - T√©cnica
Kanban Flow - T√©cnica
OKR Road-Mapping - T√©cnica
PMI / PMP Framework - T√©cnica
PRINCE2 - T√©cnica
Risk & Issue Management - T√©cnica
SAFe 5.0 - T√©cnica
Scrum Mastery - T√©cnica
Q# - T√©cnica
Qiskit - T√©cnica
Edge Orchestration - T√©cnica
ABAP OO - T√©cnica
SAP BTP (Business Technology Platform) - T√©cnica
SAP Fiori UX - T√©cnica
SAP HANA Modelling - T√©cnica
SAP Integration Suite / PI-PO - T√©cnica
SAP S/4HANA Extensibility - T√©cnica
SAP SuccessFactors - T√©cnica
SAP UI5 - T√©cnica
Cassandra - T√©cnica
InfluxDB (Time-Series) - T√©cnica
Microsoft SQL Server - T√©cnica
MongoDB - T√©cnica
MySQL / MariaDB - T√©cnica
Neo4j - T√©cnica
Oracle Database - T√©cnica
PostgreSQL - T√©cnica
Redis - T√©cnica
SQLite - T√©cnica
IAM - T√©cnica
OWASP - T√©cnica
SAST/DAST - T√©cnica
SBOM - T√©cnica
Threat Modeling - T√©cnica
Zero-Trust - T√©cnica
Accountability - Suave
Active Listening - Suave
Adaptability - Suave
Collaboration - Suave
Communication - Suave
Conflict Resolution - Suave
Creativity & Innovation - Suave
Critical Thinking - Suave
Cultural Awareness - Suave
Decision-Making - Suave
Emotional Intelligence - Suave
Empathy - Suave
Facilitation - Suave
Flexibility - Suave
Growth Mindset - Suave
Leadership - Suave
Mentoring & Coaching - Suave
Negotiation - Suave
Networking - Suave
Presentation Skills - Suave
Prioritization - Suave
Problem-Solving - Suave
Public Speaking - Suave
Resilience - Suave
Self-Motivation - Suave
Stakeholder Management - Suave
Stress Management - Suave
Teamwork - Suave
Technical Writing - Suave
Time Management - Suave
DDD - T√©cnica
OOP - T√©cnica
Functional - T√©cnica
Micro-/Event-Driven Services - T√©cnica
C/C++ Optimization - T√©cnica
Rust Safety - T√©cnica
Concurrency - T√©cnica
eBPF - T√©cnica
Embedded/IoT - T√©cnica
Playwright/Cypress - T√©cnica
TDD/BDD - T√©cnica
Chaos Engineering - T√©cnica
Contract Testing - T√©cnica
Property Tests - T√©cnica
Accessibility (WCAG 2.2) - T√©cnica
Adobe XD - T√©cnica
Design Systems (Storybook, Material 3) - T√©cnica
Figma - T√©cnica
Interaction & Motion Design - T√©cnica
Responsive & Mobile-First Design - T√©cnica
Sketch - T√©cnica
Usability Testing - T√©cnica
PWA Patterns - T√©cnica
React/Next.js - T√©cnica
Svelte - T√©cnica
Vue - T√©cnica
WebAssembly - T√©cnica
Docker Compose - T√©cnica
OpenShift - T√©cnica
Jest - T√©cnica
LangChain - T√©cnica
DataDog Monitoring - T√©cnica


Formato:
{
  "habilidades_tecnicas": ["skill1", "skill2"],
  "habilidades_blandas": ["habilidad1", "habilidad2"],
  "certificaciones": [
    { "nombre": "Cert1", "entidad": "Entidad1" }
  ]
}
Curr√≠culum:
${pdfData.text}
`;

    const response = await axios.post(GEMINI_API_URL, {
      contents: [
        {
          parts: [{ text: prompt }]
        }
      ]
    }, {
      headers: {
        'Content-Type': 'application/json'
      }
    });

    const raw = response.data.candidates[0].content.parts[0].text;

    // üßπ Limpiar el bloque markdown ```json ... ```
    const cleaned = raw.replace(/```json|```/g, '').trim();

    // ‚úÖ Parsear JSON limpio
    const parsed = JSON.parse(cleaned);
    return parsed;
  } catch (error) {
    console.error("Error al analizar el CV:", error.message);
    throw {
      error: "No se pudo parsear la respuesta de Gemini",
      raw: error.response?.data || error.message
    };
  }
};
const guardarDatosCVExtraidos = async (userId, datosCV) => {
  const { habilidades_tecnicas, habilidades_blandas, certificaciones } = datosCV;

  // Guardar habilidades t√©cnicas y blandas
  const guardarHabilidad = async (nombre, esTecnica) => {
    // Buscar si ya existe
    let { data: habilidad, error } = await supabase
      .from('habilidades')
      .select('idhabilidad')
      .eq('nombre', nombre)
      .maybeSingle();

    // Si no existe, insertarla
    if (!habilidad) {
      const insert = await supabase
        .from('habilidades')
        .insert([{ nombre, estecnica: esTecnica }])
        .select()
        .single();
      habilidad = insert.data;
    }

    // Asociar al usuario (si no existe ya)
    const yaAsociada = await supabase
      .from('usuario_habilidad')
      .select('*')
      .eq('idusuario', userId)
      .eq('idhabilidad', habilidad.idhabilidad)
      .maybeSingle();

    if (!yaAsociada.data) {
      await supabase
        .from('usuario_habilidad')
        .insert([{ idusuario: userId, idhabilidad: habilidad.idhabilidad }]);
    }
  };

  for (const h of habilidades_tecnicas) {
    await guardarHabilidad(h, true);
  }

  for (const h of habilidades_blandas) {
    await guardarHabilidad(h, false);
  }

  // Guardar certificaciones
  for (const cert of certificaciones) {
    const { nombre, entidad } = cert;

    // Buscar si ya existe la certificaci√≥n
    let { data: certExistente, error } = await supabase
      .from('certificaciones')
      .select('idcertificaciones')
      .eq('cnombre', nombre)
      .maybeSingle();

    // Insertar si no existe
    if (!certExistente) {
      const insert = await supabase
        .from('certificaciones')
        .insert([{ cnombre: nombre, emitidopor: entidad }])
        .select()
        .single();
      certExistente = insert.data;
    }

    // Asociar al usuario
    const yaTiene = await supabase
      .from('usuario_certificado')
      .select('*')
      .eq('idusuario', userId)
      .eq('cnombre', nombre)
      .maybeSingle();

    if (!yaTiene.data) {
      await supabase
      .from('usuario_certificado')
      .insert([{ idusuario: userId, idcertificaciones: certExistente.idcertificaciones }]);
    }
  }

  return true;
};


const mejorarTextoConGemini = async (textoOriginal) => {
  try {
    const prompt = `
Mejora el siguiente texto para que sea m√°s formal, t√©cnico y profesional. Devu√©lvelo como texto plano sin comillas ni formato adicional en ingles:

"${textoOriginal}"
`;

    const response = await axios.post(GEMINI_API_URL, {
      contents: [
        {
          parts: [{ text: prompt }]
        }
      ]
    }, {
      headers: {
        'Content-Type': 'application/json'
      }
    });

    const result = response.data.candidates?.[0]?.content?.parts?.[0]?.text;
    return result?.trim() || 'No se pudo mejorar el texto.';
  } catch (error) {
    console.error('Error al mejorar texto:', error.message);
    throw new Error('Error al mejorar el texto.');
  }
};



module.exports = { extractCVDataWithGemini, guardarDatosCVExtraidos, mejorarTextoConGemini };
